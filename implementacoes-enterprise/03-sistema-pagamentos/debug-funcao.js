/**
 * üîß DEBUG DA FUN√á√ÉO REGISTRAR SALDO DEVEDOR
 */

const { Pool } = require('pg');

const pool = new Pool({
    connectionString: 'postgresql://postgres:ELjbkkgUASRCtdTAXVFgIssOXiLsRCPq@trolley.proxy.rlwy.net:44790/railway',
    ssl: { rejectUnauthorized: false }
});

async function debugarFuncao() {
    try {
        console.log('üîç Testando fun√ß√£o registrar_saldo_devedor...');
        
        // Usar usu√°rio existente
        const userId = '973c291c-3b69-41e4-9495-bfb9ecda998b';
        
        // Verificar saldo antes
        const antes = await pool.query('SELECT first_name, prepaid_credits, saldo_devedor_brl FROM users WHERE id = $1', [userId]);
        console.log('üìä Estado antes:', antes.rows[0]);
        
        // Executar fun√ß√£o
        const resultado = await pool.query(`
            SELECT registrar_saldo_devedor($1, $2, $3, $4, $5) as result
        `, [userId, 9999, 50.00, 0.00, 'Teste debug']);
        
        console.log('üéØ Resultado da fun√ß√£o:');
        console.log(JSON.stringify(resultado.rows[0].result, null, 2));
        
        // Verificar saldo depois
        const depois = await pool.query('SELECT first_name, prepaid_credits, saldo_devedor_brl FROM users WHERE id = $1', [userId]);
        console.log('üìä Estado depois:', depois.rows[0]);
        
    } catch (error) {
        console.error('‚ùå Erro:', error.message);
    } finally {
        await pool.end();
    }
}

debugarFuncao();
