# üöÄ EXECU√á√ÉO AUTOM√ÅTICA - SISTEMA DE ACEITE DE TERMOS
# =========================================================
# Arquivo: executar-integracao-termos.ps1
# Vers√£o: 1.0.0
# Data: 2025-08-22

# üéØ INSTRU√á√ïES PARA EXECU√á√ÉO IMEDIATA:

Write-Host "üöÄ SISTEMA DE ACEITE DE TERMOS E POL√çTICAS" -ForegroundColor Cyan
Write-Host "===========================================" -ForegroundColor Cyan
Write-Host ""

# 1Ô∏è‚É£ Executar integra√ß√£o autom√°tica
Write-Host "1Ô∏è‚É£ Executando integra√ß√£o autom√°tica..." -ForegroundColor Yellow
try {
    node integrador-sistema-termos.js
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Integra√ß√£o conclu√≠da com sucesso!" -ForegroundColor Green
        
        # 2Ô∏è‚É£ Executar testes de valida√ß√£o
        Write-Host ""
        Write-Host "2Ô∏è‚É£ Executando testes de valida√ß√£o..." -ForegroundColor Yellow
        node testar-sistema-termos.js
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Testes conclu√≠dos!" -ForegroundColor Green
        }
        
        # 3Ô∏è‚É£ Verificar arquivos criados
        Write-Host ""
        Write-Host "3Ô∏è‚É£ Verificando arquivos criados..." -ForegroundColor Yellow
        
        $createdFiles = @(
            "routes\terms-api.js",
            "migrate-terms-system.sql",
            "frontend\components\terms\TermsAcceptanceModal.jsx",
            "frontend\components\terms\TermsAdminManager.jsx",
            "frontend\components\terms\terms-config.json"
        )
        
        $foundFiles = 0
        foreach ($file in $createdFiles) {
            if (Test-Path $file) {
                Write-Host "  ‚úÖ $file" -ForegroundColor Green
                $foundFiles++
            } else {
                Write-Host "  ‚ùå $file" -ForegroundColor Red
            }
        }
        
        Write-Host ""
        Write-Host "üìä Arquivos encontrados: $foundFiles/$($createdFiles.Count)" -ForegroundColor Cyan
        
        # 4Ô∏è‚É£ Verificar relat√≥rios
        Write-Host ""
        Write-Host "4Ô∏è‚É£ Verificando relat√≥rios..." -ForegroundColor Yellow
        
        if (Test-Path "terms-integration-report.json") {
            Write-Host "  ‚úÖ Relat√≥rio de integra√ß√£o criado" -ForegroundColor Green
            
            # Ler estat√≠sticas do relat√≥rio
            try {
                $report = Get-Content "terms-integration-report.json" | ConvertFrom-Json
                $statusText = if ($report.success) { "SUCESSO" } else { "FALHA" }
                $statusColor = if ($report.success) { "Green" } else { "Red" }
                Write-Host "  üìä Status: $statusText" -ForegroundColor $statusColor
                Write-Host "  üìÅ Arquivos criados: $($report.files.created.Count)" -ForegroundColor Cyan
                Write-Host "  üîó APIs adicionadas: $($report.apis.endpoints_added.Count)" -ForegroundColor Cyan
            } catch {
                Write-Host "  ‚ö†Ô∏è N√£o foi poss√≠vel ler estat√≠sticas do relat√≥rio" -ForegroundColor Yellow
            }
        } else {
            Write-Host "  ‚ùå Relat√≥rio de integra√ß√£o n√£o encontrado" -ForegroundColor Red
        }
        
        if (Test-Path "terms-integration-summary.txt") {
            Write-Host "  ‚úÖ Resumo em texto criado" -ForegroundColor Green
        }
        
        # 5Ô∏è‚É£ Pr√≥ximos passos
        Write-Host ""
        Write-Host "üéØ PR√ìXIMOS PASSOS OBRIGAT√ìRIOS:" -ForegroundColor Yellow
        Write-Host "=================================" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "1. üóÑÔ∏è BANCO DE DADOS:" -ForegroundColor White
        Write-Host "   Execute o arquivo migrate-terms-system.sql no PostgreSQL:" -ForegroundColor Gray
        Write-Host "   psql -U seu_usuario -d sua_database -f migrate-terms-system.sql" -ForegroundColor Gray
        Write-Host ""
        Write-Host "2. üîÑ REINICIAR SERVIDOR:" -ForegroundColor White
        Write-Host "   npm restart" -ForegroundColor Gray
        Write-Host "   # ou" -ForegroundColor Gray
        Write-Host "   pm2 restart all" -ForegroundColor Gray
        Write-Host ""
        Write-Host "3. üß™ TESTAR APIS:" -ForegroundColor White
        Write-Host "   GET http://localhost:3000/api/terms/current" -ForegroundColor Gray
        Write-Host "   GET http://localhost:3000/api/terms/health" -ForegroundColor Gray
        Write-Host ""
        Write-Host "4. ‚öõÔ∏è CONFIGURAR FRONTEND:" -ForegroundColor White
        Write-Host "   Integre os componentes React na sua aplica√ß√£o frontend" -ForegroundColor Gray
        Write-Host "   Arquivos: frontend/components/terms/*.jsx" -ForegroundColor Gray
        Write-Host ""
        Write-Host "5. ‚öñÔ∏è COMPLIANCE:" -ForegroundColor White
        Write-Host "   Configure aceite obrigat√≥rio no cadastro de usu√°rios" -ForegroundColor Gray
        Write-Host "   Implemente verifica√ß√£o autom√°tica no login" -ForegroundColor Gray
        Write-Host ""
        
        # 6Ô∏è‚É£ Status final
        if ($foundFiles -eq $createdFiles.Count) {
            Write-Host "üéâ SISTEMA DE ACEITE DE TERMOS INSTALADO! üéâ" -ForegroundColor Green
            Write-Host "‚úÖ Todos os arquivos foram criados com sucesso" -ForegroundColor Green
            Write-Host "üîß Execute os pr√≥ximos passos para ativar o sistema" -ForegroundColor Cyan
        } else {
            Write-Host "‚ö†Ô∏è Instala√ß√£o parcial - alguns arquivos n√£o foram criados" -ForegroundColor Yellow
            Write-Host "üîç Verifique os logs de erro acima" -ForegroundColor Yellow
        }
        
    } else {
        Write-Host "‚ùå Falha na integra√ß√£o!" -ForegroundColor Red
        Write-Host "üîç Verifique os logs de erro para detalhes" -ForegroundColor Yellow
    }
    
} catch {
    Write-Host "‚ùå Erro durante a execu√ß√£o: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "üí° Verifique se o Node.js est√° instalado e funcionando" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üìã Para mais detalhes, consulte:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ terms-integration-report.json (relat√≥rio completo)" -ForegroundColor Gray
Write-Host "   ‚Ä¢ terms-integration-summary.txt (resumo)" -ForegroundColor Gray
Write-Host "   ‚Ä¢ implementacoes-enterprise/02-sistema-termos/documentacao.md" -ForegroundColor Gray

Write-Host ""
Write-Host "üèÅ Execu√ß√£o finalizada!" -ForegroundColor Magenta
Write-Host "===========================================" -ForegroundColor Magenta
