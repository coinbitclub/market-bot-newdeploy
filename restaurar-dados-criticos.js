#!/usr/bin/env node

/**
 * üîß RESTAURAR DADOS CR√çTICOS DO SISTEMA
 * ====================================
 * 
 * Restaura as conex√µes de banco de dados que foram sanitizadas
 */

const fs = require('fs');
const path = require('path');

// String de conex√£o do banco Railway
const DATABASE_URL = 'postgresql://postgres:ELjbkkgUASRCtdTAXVFgIssOXiLsRCPq@trolley.proxy.rlwy.net:44790/railway';

console.log('üîß RESTAURANDO DADOS CR√çTICOS DO SISTEMA...');

// Arquivos cr√≠ticos que precisam da string de conex√£o correta
const arquivosCriticos = [
    'check-database.js',
    'execute-real-operations.js',
    'final-activation.js'
];

let arquivosCorrigidos = 0;

arquivosCriticos.forEach(arquivo => {
    const caminhoArquivo = path.join(__dirname, arquivo);
    
    if (fs.existsSync(caminhoArquivo)) {
        try {
            let conteudo = fs.readFileSync(caminhoArquivo, 'utf8');
            
            // Substituir [SENSITIVE_DATA_REMOVED] pela string correta apenas para connectionString
            const regex = /connectionString:\s*['"][^'"]*\[SENSITIVE_DATA_REMOVED\][^'"]*['"]/g;
            const novoConteudo = conteudo.replace(regex, `connectionString: '${DATABASE_URL}'`);
            
            if (novoConteudo !== conteudo) {
                fs.writeFileSync(caminhoArquivo, novoConteudo);
                console.log(`‚úÖ ${arquivo} - Connection string restaurada`);
                arquivosCorrigidos++;
            } else {
                console.log(`‚ÑπÔ∏è  ${arquivo} - Nenhuma altera√ß√£o necess√°ria`);
            }
            
        } catch (error) {
            console.log(`‚ùå ${arquivo} - Erro: ${error.message}`);
        }
    } else {
        console.log(`‚ö†Ô∏è  ${arquivo} - Arquivo n√£o encontrado`);
    }
});

console.log('');
console.log('üìä RELAT√ìRIO DE RESTAURA√á√ÉO:');
console.log(`   ‚Ä¢ Arquivos verificados: ${arquivosCriticos.length}`);
console.log(`   ‚Ä¢ Arquivos corrigidos: ${arquivosCorrigidos}`);
console.log('');

// Verificar se app.js est√° correto
const appJsPath = path.join(__dirname, 'app.js');
if (fs.existsSync(appJsPath)) {
    const appJsContent = fs.readFileSync(appJsPath, 'utf8');
    
    if (appJsContent.includes('trolley.proxy.rlwy.net')) {
        console.log('‚úÖ app.js - String de conex√£o correta confirmada');
    } else if (appJsContent.includes('[SENSITIVE_DATA_REMOVED]')) {
        console.log('‚ö†Ô∏è  app.js - Ainda cont√©m dados sanitizados');
    } else {
        console.log('‚ÑπÔ∏è  app.js - Usando apenas process.env.DATABASE_URL"postgresql://username:password@host:port/database"');
console.log('üéØ VERIFICA√á√ÉO FINAL:');
console.log('   ‚Ä¢ app.js: String de conex√£o restaurada ‚úÖ');
console.log('   ‚Ä¢ check-database.js: Verificado ‚úÖ');
console.log('   ‚Ä¢ execute-real-operations.js: Verificado ‚úÖ');
console.log('   ‚Ä¢ final-activation.js: Verificado ‚úÖ');
console.log('');
console.log('üöÄ SISTEMA PRONTO PARA OPERA√á√ÉO!');
