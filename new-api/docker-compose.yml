version: '3.8'

services:
  # PostgreSQL Database - Replica da infraestrutura de produção
  postgres:
    image: postgres:15-alpine
    container_name: market-bot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: market_bot_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - market-bot-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d market_bot_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis para cache e sessões (opcional, mas recomendado para produção)
  redis:
    image: redis:7-alpine
    container_name: market-bot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - market-bot-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin para administração do banco (opcional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: market-bot-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@marketbot.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - market-bot-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  market-bot-network:
    driver: bridge