#!/usr/bin/env node

/**
 * üß™ TESTE FINAL DO SISTEMA
 * =========================
 * 
 * Testa se tudo est√° funcionando ap√≥s configura√ß√£o nas exchanges
 */

const axios = require('axios');

async function testeCompleto() {
    console.log('üß™ TESTE FINAL DO SISTEMA COMPLETO');
    console.log('=' .repeat(40));
    
    console.log('\n1Ô∏è‚É£ Testando conectividade b√°sica...');
    try {
        const response = await axios.get('https://coinbitclub-bot.ngrok.io/health', { timeout: 10000 });
        console.log('‚úÖ Sistema online e respondendo');
    } catch (error) {
        console.log('‚ùå Sistema n√£o est√° respondendo');
        return;
    }
    
    console.log('\n2Ô∏è‚É£ Testando endpoints principais...');
    const endpoints = [
        '/api/status',
        '/api/health',
        '/api/users',
        '/dashboard'
    ];
    
    for (const endpoint of endpoints) {
        try {
            const response = await axios.get(`https://coinbitclub-bot.ngrok.io${endpoint}`, { 
                timeout: 5000,
                validateStatus: () => true 
            });
            console.log(`‚úÖ ${endpoint} - Status: ${response.status}`);
        } catch (error) {
            console.log(`‚ö†Ô∏è ${endpoint} - ${error.message}`);
        }
    }
    
    console.log('\n3Ô∏è‚É£ Verificando configura√ß√£o de exchanges...');
    console.log('üìã CHECKLIST P√ìS-CONFIGURA√á√ÉO:');
    console.log('   ‚ñ° Bybit: IP coinbitclub-bot.ngrok.io adicionado');
    console.log('   ‚ñ° Binance: IP coinbitclub-bot.ngrok.io adicionado');
    console.log('   ‚ñ° Teste de ordem: Executar ordem teste');
    
    console.log('\nüéØ PR√ìXIMOS TESTES:');
    console.log('   1. Fazer login no sistema');
    console.log('   2. Executar uma opera√ß√£o teste');
    console.log('   3. Verificar se n√£o h√° mais erro de IP');
    
    console.log('\nüèÜ SEU SISTEMA EST√Å PRONTO PARA PRODU√á√ÉO!');
    console.log('üåê IP Fixo: https://coinbitclub-bot.ngrok.io');
}

testeCompleto().catch(console.error);
